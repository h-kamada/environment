# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# プロンプトを自分仕様にしてみる
#PS1='\[\033[1;31m\]\u:\w$ \e[0m'


# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi


## 自分の使うROS DISTRO
## どのバージョンを使うか
#source $HOME/ros/electric/setup.bash
#source $HOME/ros/fuerte/setup.bash
#source $HOME/ros/groovy/setup.bash
source $HOME/ros/hydro/devel/setup.bash

# svn用の設定
export SSH_USER=h-kamada
export SVN_SSH="ssh -l ${SSH_USER}"

#
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias grep='grep --exclude-dir=.svn'

#euslisp
export PATH=$PATH:`rospack find roseus`/bin

#euslib
export CVSDIR=~/prog
#source $(rospack find euslisp)/jskeus/bashrc.eus
alias eus='roseus "(jsk)" "(rbrain)"' # for old jsk alias

# rviz
export OGRE_RTT_MODE=Copy  # ノートPCの人は

# openrtm
#if [ -f `rospack find openrtm_tools`/scripts/rtshell-setup.sh ]; then
#    source `rospack find openrtm_tools`/scripts/rtshell-setup.sh
#fi
# ここを参考に適宜変更 https://code.google.com/p/rtm-ros-robotics/wiki/rtm_ros_common_201307_migration

# source `rospack find jsk_tools`/src/bashrc.ros

# for hrp2user
export OPENHRPHOME=$CVSDIR/OpenHRP
# 「hrp2環境の構築(for hrp2 user)」のbashrcの設定をかく

# for drcsim
#local
 ROS_PACKAGE_PATH_ORG=$ROS_PACKAGE_PATH
[[ -f /usr/share/drcsim/setup.sh ]] && source /usr/share/drcsim/setup.sh
ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH_ORG:$ROS_PACKAGE_PATH
export ROS_PACKAGE_PATH=`echo $(echo $ROS_PACKAGE_PATH | sed -e "s/:/\n/g" | awk '!($0 in A) && A[$0] = 1' | grep -v "opt/ros"; echo $ROS_PACKAGE_PATH | sed -e "s/:/\n/g" | awk '!($0 in A) && A[$0] = 1' | grep "opt/ros") | sed -e "s/ /:/g"`

#一週間プロジェクト用
export ROS_PACKAGE_PATH=$HOME/prog/euslib/demo/h-kamada:$ROS_PACKAGE_PATH
export ROS_PACKAGE_PATH=$HOME/ros/groovy/jsk_2014_04_pr2_73b2:$ROS_PACKAGE_PATH

#rubyの環境用
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

function pr1040 () {
    # rossetrobot 133.11.216.211
    # rossetip
    rossetmaster pr1040.jsk.imi.i.u-tokyo.ac.jp
    rossetip
}

function pr1012(){
    # rossetrobot 133.11.216.201
    # rossetip
    rossetmaster pr1012.jsk.imi.i.u-tokyo.ac.jp
    rossetip
}

function gazebo(){
    rossetrobot 133.11.216.145
}


#emacsをnwで開く
alias emacs='emacs -nw'


#solarized color の実験
#!/bin/sh
#DARK_BG='#000014141A1A'
# original: 
#DARK_BG='#00002B2B3636'
#LIGHTEST='#FFFFFBFBF0F0'
# original: 
#LIGHTEST='#FDFDF6F6E3E3'

#gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_background" --type bool false
#gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_colors" --type bool false
#gconftool-2 --set "/apps/gnome-terminal/profiles/Default/palette" --type string "#070736364242:#D3D301010202:#858599990000:#B5B589890000:#26268B8BD2D2:#D3D336368282:#2A2AA1A19898:#EEEEE8E8D5D5:$DARK_BG:#CBCB4B4B1616:#58586E6E7575:#65657B7B8383:#838394949696:#6C6C7171C4C4:#9393A1A1A1A1:$LIGHTEST"
#gconftool-2 --set "/apps/gnome-terminal/profiles/Default/background_color" --type string "$DARK_BG"
#gconftool-2 --set "/apps/gnome-terminal/profiles/Default/foreground_color" --type string "#65657B7B8383"

#dircolors-solarized用の設定
# eval `dircolors ~/.dir_colors`




#Bundler 用
#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD
# export PATH=/home/h-kamada/structure_from_motion/bundler-v0.4-source/bin:$PATH
# export LD_LIBRARY_PATH=/home/h-kamada/structure_from_motion/bundler-v0.4-source/bin:$LD_LIBRARY_PATH
# export LD_LIBRARY_PATH=/home/h-kamada/structure_from_motion/bundler-v0.4-source:$LD_LIBRARY_PATH
# export PATH=/home/h-kamada/structure_from_motion/bundler-v0.4-source:$PATH


#elas_ros用
export ROS_PACKAGE_PATH=$HOME/structure_from_motion/cyphy-elas-ros:$ROS_PACKAGE_PATH
#ethzasl_ptam
export ROS_PACKAGE_PATH=$HOME/structure_from_motion/ethzasl_ptam:$ROS_PACKAGE_PATH

#myprosilica ros package path
export ROS_PACKAGE_PATH=$HOME/ros/groovy/myprosilica:$ROS_PACKAGE_PATH
export ROS_PACKAGE_PATH=$HOME/ros/groovy/myprosilica2:$ROS_PACKAGE_PATH

#image_create用
export ROS_PACKAGE_PATH=$HOME/git/polarization/image_create:$ROS_PACKAGE_PATH

#git/test/opencv用
export ROS_PACKAGE_PATH=$HOME/git/test/opencv:$ROS_PACKAGE_PATH

#mycamera用
# export ROS_PACKAGE_PATH=$HOME/mycatkin_ws/src/mycamera:$ROS_PACKAGE_PATH
# source $HOME/mycatkin_ws/devel/setup.bash

#catkin だとroscd単体が変になる問題のために
#export ROS_WORKSPACE=/home/h-kamada/ros/hydro/src
export ROS_WORKSPACE=/home/h-kamada/ros/hydro/devel

#language
#export LANG=C